// ---------------------------------------------------------------------
//  Grid
// ---------------------------------------------------------------------

.col-1 { width: calc(1 / 12 * 100%); }
.col-2 { width: calc(2 / 12 * 100%); }
.col-3 { width: calc(3 / 12 * 100%); }
.col-4 { width: calc(4 / 12 * 100%); }
.col-5 { width: calc(5 / 12 * 100%); }
.col-6 { width: calc(6 / 12 * 100%); }
.col-7 { width: calc(7 / 12 * 100%); }
.col-8 { width: calc(8 / 12 * 100%); }
.col-9 { width: calc(9 / 12 * 100%); }
.col-10 { width: calc(10 / 12 * 100%); }
.col-11 { width: calc(11 / 12 * 100%); }
.col-12 { width: 100%; }

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    .col-#{$breakpoint}-1 { width: calc( 1 / 12 * 100%); }
    .col-#{$breakpoint}-2 { width: calc( 2 / 12 * 100%); }
    .col-#{$breakpoint}-3 { width: calc( 3 / 12 * 100%); }
    .col-#{$breakpoint}-4 { width: calc( 4 / 12 * 100%); }
    .col-#{$breakpoint}-5 { width: calc( 5 / 12 * 100%); }
    .col-#{$breakpoint}-6 { width: calc( 6 / 12 * 100%); }
    .col-#{$breakpoint}-7 { width: calc( 7 / 12 * 100%); }
    .col-#{$breakpoint}-8 { width: calc( 8 / 12 * 100%); }
    .col-#{$breakpoint}-9 { width: calc( 9 / 12 * 100%); }
    .col-#{$breakpoint}-10 { width: calc( 10 / 12 * 100%); }
    .col-#{$breakpoint}-11 { width: calc( 11 / 12 * 100%); }
    .col-#{$breakpoint}-12 { width: 100%; }
  }
}

@mixin gutters ($gutter-width: 24px) {
  margin-right: -$gutter-width;
  margin-left: -$gutter-width;

  > [class*='col-'] {
    padding-right: $gutter-width !important;
    padding-left: $gutter-width !important;
  }
}

.gutter {
  @include gutters(24px);
}

// --------------------------------------------------
// Grid system
// --------------------------------------------------

.grid {
  display: flex;
  flex-wrap: wrap;
  width: calc(100% + 48px);
}

.flex-items-end {
  align-items: end;
}
.flex-items-center {
  align-items: center;
}
.flex-justify-between {
  justify-content: space-between;
}


.grid--stretch-all {
  align-items: stretch;

  > * {
    display: flex;
    flex-direction: column;
  }
}


// --------------------------------------------------
// Grid simple
// --------------------------------------------------

.columns {
  width: 100%;
  display: grid;
  align-items: stretch;
  grid-gap: 24px;
  grid-template-columns: repeat(1, minmax(0, 1fr));

  &.columns--align-center {
    align-items: center;
  }

  > * {
    width: 100%;
  }

  @include start-at($large) {
    grid-gap: 48px;

    &.columns--sm-gap {
      grid-gap: 24px;
    }
  }
}
@include stop-at($medium) {
  .column--pull-sm {
    margin-top: -130px;
  }
}

.columns--two-thirds {

  @include start-at($medium) {
    grid-template-columns: 33% 64%;
  }
}

.columns--two {
  @include start-at($medium) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.columns--two-lg {
  @include start-at($large) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

.columns--three {
  @include start-at($medium) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
.columns--four {
  @include start-at($medium) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  @include start-at($large) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}


.columns--three-always {
  grid-template-columns: repeat(3, minmax(0, 1fr));

  @include stop-at($medium) {
    grid-gap: 16px;
  }
}

.columns--five {

  @include start-at($medium) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  @include start-at($large) {
    grid-gap: 16px;

  }
  @include start-at($xlarge) {
    grid-gap: 16px;
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
}